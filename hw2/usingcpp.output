Grammar

    0 $accept: start $end

    1 start: tree

    2 tree: '(' NAME children ')'
    3     | NAME

    4 children: tree children
    5         | tree


Terminals, with rules where they appear

$end (0) 0
'(' (40) 2
')' (41) 2
error (256)
NAME (258) 2 3


Nonterminals, with rules where they appear

$accept (6)
    on left: 0
start (7)
    on left: 1, on right: 0
tree (8)
    on left: 2 3, on right: 1 4 5
children (9)
    on left: 4 5, on right: 2 4


State 0

    0 $accept: . start $end

    NAME  shift, and go to state 1
    '('   shift, and go to state 2

    start  go to state 3
    tree   go to state 4


State 1

    3 tree: NAME .

    $default  reduce using rule 3 (tree)


State 2

    2 tree: '(' . NAME children ')'

    NAME  shift, and go to state 5


State 3

    0 $accept: start . $end

    $end  shift, and go to state 6


State 4

    1 start: tree .

    $default  reduce using rule 1 (start)


State 5

    2 tree: '(' NAME . children ')'

    NAME  shift, and go to state 1
    '('   shift, and go to state 2

    tree      go to state 7
    children  go to state 8


State 6

    0 $accept: start $end .

    $default  accept


State 7

    4 children: tree . children
    5         | tree .

    NAME  shift, and go to state 1
    '('   shift, and go to state 2

    $default  reduce using rule 5 (children)

    tree      go to state 7
    children  go to state 9


State 8

    2 tree: '(' NAME children . ')'

    ')'  shift, and go to state 10


State 9

    4 children: tree children .

    $default  reduce using rule 4 (children)


State 10

    2 tree: '(' NAME children ')' .

    $default  reduce using rule 2 (tree)
